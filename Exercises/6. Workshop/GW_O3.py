'''
Tρίτος κύκλος λειτουργίας (Ο3) του LIGO-Virgo:
Παρακάτω δίνονται κάποια από τα στοιχεία των γεγονότων
που παρατηρήθηκαν. Πιο συγκεκριμένα, δίνονται οι ονομασίες
των γεγονότων, η μάζα του πρωτεύοντος αντικειμένου, η μάζα
του δευτερεύοντος αντικειμένου και η μάζα του τελικού
αντικειμένου μετά τη συγχώνευση.
'''

#Χρειαζόμαστε τη βιβλιοθήκη math
import math

#Θα χρειαστείτε το παρακάτω κομμάτι κώδικα:
def print_NSorBH(m):
    '''
    Τυπώνει αν ένα σώμα είναι Αστέρας Νετρονίων ή Μελανή Οπή
    αναλόγως τη μάζα m που περνάμε.
    '''
    if m<2.5:
        print('Άρα πρόκειται για Αστέρα Νετρονίων!')
    else:
        print('Άρα πρόκειται για Μελανή Οπή!')
    pass

'''
Ονομασίες των γεγονότων:
Το όνομα κάθε γεγονότος δίνεται από την ημερομηνία παρατήρησης.
Συνεπώς, το γεγονός GW191224 για παράδειγμα είναι εκείνο που
παρατηρήθηκε στις 2019/12/24 (έτος/μήνας/ημέρα). Για μεγαλύτερη
ακρίβεια, στο όνομα συμπληρώνεται και η ώρα παρατήρησης σε ώρα,
λεπτά, δευτερόλεπτα (ΩΩΛΛΔΔ).
'''
names = ('GW190408_181802', 'GW190412',        'GW190413_052954',
         'GW190413_134308', 'GW190421_213856', 'GW190424_180648',
         'GW190425',        'GW190426_152155', 'GW190503_185404',
         'GW190512_180714', 'GW190513_205428', 'GW190514_065416', 
         'GW190517_055101', 'GW190519_153544', 'GW190521', 
         'GW190521_074359', 'GW190527_092055', 'GW190602_175927', 
         'GW190620_030421', 'GW190630_185205', 'GW190701_203306', 
         'GW190706_222641', 'GW190707_093326', 'GW190708_232457', 
         'GW190719_215514', 'GW190720_000836', 'GW190727_060333', 
         'GW190728_064510', 'GW190731_140936', 'GW190803_022701', 
         'GW190814',        'GW190828_063405', 'GW190828_065509', 
         'GW190909_114149', 'GW190910_112807', 'GW190915_235702', 
         'GW190924_021846', 'GW190929_012149', 'GW190930_133541'
)


'''
Μάζες των αντικειμένων
'''


'''
Πρωτεύον αντικείμενο
Η μάζα του πρωτεύοντος συμπαγούς αντικειμένου (primary compact
object) σε Ηλιακές μάζες.
'''
m1=(24.6, 30.1, 34.7, 
    47.5, 41.3, 40.5, 
    2.0,  5.7,  43.3, 
    23.3, 35.7, 39.0, 
    37.4, 66.0, 95.3, 
    42.2, 36.5, 69.1, 
    57.1, 35.1, 53.9, 
    67.0, 11.6, 17.6, 
    36.5, 13.4, 38.0, 
    12.3, 41.5, 37.3, 
    23.2, 32.1, 24.1, 
    45.8, 43.9, 35.3, 
    8.9,  80.8, 12.3
)

'''
Δευτερεύον αντικείμενο
Η μάζα του δευτερεύοντος συμπαγούς αντικειμένου (secondary compact
object) σε Ηλιακές μάζες.
'''
m2 = (18.4, 8.3,  23.7, 
      31.8, 31.9, 31.8, 
      1.4,  1.5,  28.4, 
      12.6, 18.0, 28.4, 
      25.3, 40.5, 69.0, 
      32.8, 22.6, 47.8, 
      35.5, 23.7, 40.8, 
      38.2, 8.4,  13.2, 
      20.8, 7.8,  29.4, 
      8.1,  28.8, 27.3, 
      2.59, 26.2, 10.2, 
      28.3, 35.6, 24.4, 
      5.0,  24.1, 7.8
)


'''
Τελικό αντικείμενο
Η μάζα του τελικού συμπαγούς αντικειμένου μετά τη συγχώνευση
(σε Ηλιακές μάζες). Όταν δεν μπορεί να υπολογισθεί με
ακρίβεια η μάζα χρησιμοποιούμε NaN (Not-a-Number).
'''
Mf = (41.1, 37.3,  56.0, 
      75.5, 69.7,  68.9, 
      math.nan, math.nan,  68.6, 
      34.5, 51.6,  64.5, 
      59.3, 101.0, 156.3,
      71.0, 56.4,  110.9, 
      87.2, 56.4,  90.2, 
      99.0, 19.2,  29.5, 
      54.9, 20.4,  63.8, 
      19.6, 67.0,  61.7,
      25.6, 54.9,  33.1,
      72.0, 75.8,  57.2, 
      13.3, 101.5, 19.4
)


##################################################
#################### Ασκήσεις ####################
##################################################

'''
1α. Ποιο είναι το ελαφρύτερο πρωτεύον συμπαγές σώμα;
    Είναι Αστέρας Νετρονίων ή Μελανή Οπή;

1β. Ποιο είναι το βαρύτερο πρωτεύον συμπαγές σώμα;
    Είναι Αστέρας Νετρονίων ή Μελανή Οπή;
'''


print('\nΆσκηση 1:\n')

min_m1 = min(m1) #η μεταβλητή της ελάχιστης μάζας του m1
print('\nΤο ελαφρύτερο πρωτεύον αντικείμενο είναι αυτό της \
συγχώνευσης  %s  και έχει μάζα ίση με %.1f ηλιακές μάζες.'
      %(names[m1.index(min_m1)],min_m1))  
#Καλούμε τη συνάρτηση που φτιάξαμε για να τυπώσει αν
#πρόκειται για Αστέρα Νετρονίων ή Μελανή Οπή
print_NSorBH(min_m1)

max_m1 = max(m1) #η μεταβλητή της μέγιστης μάζας του m1
print('\nΤο βαρύτερο πρωτεύον αντικείμενο είναι αυτό της \
συγχώνευσης  %s  και έχει μάζα ίση με %.1f ηλιακές μάζες.'
      %(names[m1.index(max_m1)],max_m1))  
print_NSorBH(max_m1)



'''
2α. Ποιο είναι το ελαφρύτερο δευτερεύον συμπαγές σώμα;
    Είναι Αστέρας Νετρονίων ή Μελανή Οπή;

2β. Ποιο είναι το βαρύτερο δευτερεύον συμπαγές σώμα;
    Είναι Αστέρας Νετρονίων ή Μελανή Οπή;
'''


print('\n\nΆσκηση 2:\n')

min_m2 = min(m2)
print('\nΤο ελαφρύτερο δευτερεύον αντικείμενο είναι αυτό της \
συγχώνευσης  %s  και έχει μάζα ίση με %.1f ηλιακές μάζες.'
      %(names[m2.index(min_m2)],min_m2))
print_NSorBH(min_m2)

max_m2 = max(m2)
print('\nΤο βαρύτερο δευτερεύον αντικείμενο είναι αυτό της \
συγχώνευσης  %s  και έχει μάζα ίση με %.1f ηλιακές μάζες.'
      %(names[m2.index(max_m2)],max_m2))
print_NSorBH(max_m2)



'''
3α. Ποιο είναι το ελαφρύτερο τελικό συμπαγές σώμα;
    Είναι Αστέρας Νετρονίων ή Μελανή Οπή;

3β. Ποιο είναι το βαρύτερο τελικό συμπαγές σώμα;
    Είναι Αστέρας Νετρονίων ή Μελανή Οπή;
'''


print('\n\nΆσκηση 3:\n')

min_Mf = min(Mf)
print('\nΤο ελαφρύτερο τελικό αντικείμενο είναι αυτό της \
συγχώνευσης  %s  και έχει μάζα ίση με %.1f ηλιακές μάζες.'
      %(names[Mf.index(min_Mf)],min_Mf))
print_NSorBH(min_Mf)

max_Mf = max(Mf)
print('\nΤο βαρύτερο τελικό αντικείμενο είναι αυτό της \
συγχώνευσης  %s  και έχει μάζα ίση με %.1f ηλιακές μάζες.'
      %(names[Mf.index(max_Mf)],max_Mf))
print_NSorBH(max_Mf)


'''
4α. Πόσα συστήματα συγνώνευσης Αστέρα Νετρονίων με
    Μελανή Οπή παρατηρήθηκαν;

4β. Πόσα συστήματα συγχώνευσης Μελανής Οπής με Μελανή
    Οπή παρατηρήθηκαν;

4γ. Πόσα συστήματα συγχώνευσης Αστέρα Νετρονίων με
    Αστέρα Νετρονίων παρατηρήθηκαν;

4δ. Πόσες συγχωνεύσεις ΑΝΑΝ, ΜΟΜΟ και ΑΝΜΟ υπολογίσατε;
    Πόσα συστήματα μέτρησε συνολικά το LIGO/Virgo;

4ε. Πόσα συστήματα έχουν δευτερεύον σώμα με αρχική μάζα
    μετάξύ 2.5 και 5 ηλιακών μαζών;
'''

print('\n\nΆσκηση 4:\n')

CountNSBH=0 #η μεταβλητή που "μετράει" πόσα ζεύγη ΑΝ με ΜΟ έχουμε
#με την παρακάτω for loop εξετάζουμε ένα-ένα τα γεγονότα να δούμε
#αν ικανοποιούν τα κριτήρια (ΑΝ και ΜΟ)
for i in range(len(m1)): #είναι ίδιο με το να είχαμε len(names)
    if m1[i]>=5. and m2[i]<=2.5:
        CountNSBH+=1 #είναι το ίδιο με CountNSBH=CountNSBH+1
        IndexNSBH=i #κρατάμε το δείκτη του μοναδικού γεγονότος
print('\nΣυνολικά παρατηρήθηκαν  %i  συγχωνεύσεις Μελανής \
Οπής με Αστέρα Νετρονίων.\n' %CountNSBH)

print('\nΗ μοναδική συγχώνευση Μελανής Οπής με Αστέρα Νετρονίων \
είναι αυτή του συστήματος %s.\n'%names[IndexNSBH])


CountBHBH=0 #η μεταβλητή που "μετράει" πόσα ζεύγη MO με ΜΟ έχουμε
for i in range(len(m1)):
    if m1[i]>=5. and m2[i]>=5.:
        CountBHBH+=1

print('\nΣυνολικά παρατηρήθηκαν  %i  συγχωνεύσεις Μελανής Οπής \
με Μελανή Οπή.\n' %CountBHBH)


CountNSNS=0 #η μεταβλητή που "μετράει" πόσα ζεύγη AN με AN έχουμε
for i in range(len(m1)):
    if m1[i]<=2.5 and m2[i]<=2.5:
        CountNSNS+=1

print('\nΣυνολικά παρατηρήθηκαν  %i  συγχωνεύσεις Αστέρα \
Νετρονίων με Αστέρα Νετρονίων.\n' %CountNSNS)

#η μεταβλητή που "μετράει" πόσα αντικείμενα έχουμε στο χαμηλό κενό μαζών
CountLowerMassGap=0 
for i in range(len(m1)):
    if 2.5<=m1[i]<5. or 2.5<=m2[i]<5.:
        CountLowerMassGap+=1

print('\nΣυνολικά υπάρχουν %i συστήματα που ίσως είχαν \
αντικείμενο στο χαμηλότερο κενό των μαζών (mass gap)'
      %CountLowerMassGap)


'''
5α. Υπάρχουν γεγονότα με αρχικές μάζες άνω των 60 ηλιακών
    μαζών; Πόσα είναι αυτά;

5β. Υπάρχει κάποιο γεγονός που έχει υπέρμαζο πρωτεύον KAI
    δευτερεύον αντικείμενο; 
'''

print('\n\nΆσκηση 5:\n')

CountHigherMassGap_m1,CountHigherMassGap_m2=0,0
for i in range(len(m1)):
    if m1[i]>=60:
        CountHigherMassGap_m1+=1
    if m2[i]>=60:
        CountHigherMassGap_m2+=1
print('\nΥπάρχουν  %i πρωτεύοντα και  %i δευτερεύοντα σώματα \
με μάζα μεγαλύτερη των 60 ηλιακών μαζών'\
      %(CountHigherMassGap_m1,CountHigherMassGap_m2))


CountHigherMassGap=0
for i in range(len(m1)):
    if m1[i]>=60 and m2[i]>=60:
        CountHigherMassGap+=1
        IndexHighMassGap=i
print('\nΥπάρχουν  %i συστήματα με υπέρμαζα πρωτεύοντα KAI \
δευτερεύοντα σώματα.\n' %CountHigherMassGap)



print('\nΤο σύστημα που είχε υπέρμαζα σώματα είναι το %s.'
      %names[IndexHighMassGap])
print('Η μάζα του πρωτεύοντα ήταν %.1f και του δευτερεύοντα \
ήταν %.1f ηλιακές μάζες.'
      %(m1[IndexHighMassGap],m2[IndexHighMassGap]))
print('Οι δυο αυτές Μελανές Οπές κατέληξαν σε μια μάζας %.1f \
ηλιακών μαζών.\n'%Mf[IndexHighMassGap])



